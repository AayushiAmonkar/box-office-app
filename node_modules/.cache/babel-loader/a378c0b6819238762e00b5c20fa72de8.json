{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aayushi Amonkar\\\\Documents\\\\web development\\\\ReactCourseIntensala\\\\module3\\\\box-office\\\\src\\\\components\\\\show\\\\ShowGrid.jsx\",\n    _s2 = $RefreshSig$();\n\n/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { useCallback } from \"react\";\nimport ShowCard from \"./ShowCard\";\nimport { FlexGrid } from \"../styled\";\nimport IMAGE_NOT_FOUND from \"../../images/IMAGE_NOT_FOUND.jpg\";\nimport { useShows } from \"../../misc/custom-hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShowGrid = _ref => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  let {\n    data\n  } = _ref;\n  const [starredShows, dispatchStarred] = useShows();\n  return /*#__PURE__*/_jsxDEV(FlexGrid, {\n    children: _s(data.map(_s(_ref2 => {\n      _s();\n\n      let {\n        show\n      } = _ref2;\n      const isStarred = starredShows.includes(show.id);\n      const onStarClick = useCallback((showId, isStarred) => {\n        if (isStarred) {\n          dispatchStarred({\n            type: \"REMOVE\",\n            showId\n          });\n        } else {\n          dispatchStarred({\n            type: \"ADD\",\n            showId\n          });\n        }\n      }, [isStarred, show.id]);\n      return /*#__PURE__*/_jsxDEV(ShowCard, {\n        id: show.id,\n        name: show.name,\n        image: show.image ? show.image.medium : IMAGE_NOT_FOUND,\n        summary: show.summary,\n        onStarClick: onStarClick,\n        isStarred: starredShows.includes(show.id)\n      }, show.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this);\n    }, \"sC1sRi4qny2/U1uu0QlbyJuUgIA=\")), \"sC1sRi4qny2/U1uu0QlbyJuUgIA=\")\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(ShowGrid, \"14NWZFKOj0KDpYWIwKpGLLysUOQ=\", false, function () {\n  return [useShows];\n});\n\n_c = ShowGrid;\nexport default ShowGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowGrid\");","map":{"version":3,"names":["React","useCallback","ShowCard","FlexGrid","IMAGE_NOT_FOUND","useShows","ShowGrid","data","starredShows","dispatchStarred","map","show","isStarred","includes","id","onStarClick","showId","type","name","image","medium","summary"],"sources":["C:/Users/Aayushi Amonkar/Documents/web development/ReactCourseIntensala/module3/box-office/src/components/show/ShowGrid.jsx"],"sourcesContent":["/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, { useCallback } from \"react\";\r\nimport ShowCard from \"./ShowCard\";\r\n\r\nimport { FlexGrid } from \"../styled\";\r\n\r\nimport IMAGE_NOT_FOUND from \"../../images/IMAGE_NOT_FOUND.jpg\";\r\nimport { useShows } from \"../../misc/custom-hooks\";\r\n\r\nconst ShowGrid = ({ data }) => {\r\n  const [starredShows, dispatchStarred] = useShows();\r\n\r\n  return (\r\n    <FlexGrid>\r\n      {data.map(({ show }) => {\r\n        const isStarred = starredShows.includes(show.id);\r\n\r\n        const onStarClick = useCallback(\r\n          (showId, isStarred) => {\r\n            if (isStarred) {\r\n              dispatchStarred({ type: \"REMOVE\", showId });\r\n            } else {\r\n              dispatchStarred({ type: \"ADD\", showId });\r\n            }\r\n          },\r\n          [isStarred, show.id]\r\n        );\r\n\r\n        return (\r\n          <ShowCard\r\n            key={show.id}\r\n            id={show.id}\r\n            name={show.name}\r\n            image={show.image ? show.image.medium : IMAGE_NOT_FOUND}\r\n            summary={show.summary}\r\n            onStarClick={onStarClick}\r\n            isStarred={starredShows.includes(show.id)}\r\n          />\r\n        );\r\n      })}\r\n    </FlexGrid>\r\n  );\r\n};\r\n\r\nexport default ShowGrid;\r\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,SAASC,QAAT,QAAyB,WAAzB;AAEA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,SAASC,QAAT,QAAyB,yBAAzB;;;AAEA,MAAMC,QAAQ,GAAG,QAAc;EAAA;;EAAA;;EAAA,IAAb;IAAEC;EAAF,CAAa;EAC7B,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,EAAhD;EAEA,oBACE,QAAC,QAAD;IAAA,aACGE,IAAI,CAACG,GAAL,IAAS,SAAc;MAAA;;MAAA,IAAb;QAAEC;MAAF,CAAa;MACtB,MAAMC,SAAS,GAAGJ,YAAY,CAACK,QAAb,CAAsBF,IAAI,CAACG,EAA3B,CAAlB;MAEA,MAAMC,WAAW,GAAGd,WAAW,CAC7B,CAACe,MAAD,EAASJ,SAAT,KAAuB;QACrB,IAAIA,SAAJ,EAAe;UACbH,eAAe,CAAC;YAAEQ,IAAI,EAAE,QAAR;YAAkBD;UAAlB,CAAD,CAAf;QACD,CAFD,MAEO;UACLP,eAAe,CAAC;YAAEQ,IAAI,EAAE,KAAR;YAAeD;UAAf,CAAD,CAAf;QACD;MACF,CAP4B,EAQ7B,CAACJ,SAAD,EAAYD,IAAI,CAACG,EAAjB,CAR6B,CAA/B;MAWA,oBACE,QAAC,QAAD;QAEE,EAAE,EAAEH,IAAI,CAACG,EAFX;QAGE,IAAI,EAAEH,IAAI,CAACO,IAHb;QAIE,KAAK,EAAEP,IAAI,CAACQ,KAAL,GAAaR,IAAI,CAACQ,KAAL,CAAWC,MAAxB,GAAiChB,eAJ1C;QAKE,OAAO,EAAEO,IAAI,CAACU,OALhB;QAME,WAAW,EAAEN,WANf;QAOE,SAAS,EAAEP,YAAY,CAACK,QAAb,CAAsBF,IAAI,CAACG,EAA3B;MAPb,GACOH,IAAI,CAACG,EADZ;QAAA;QAAA;QAAA;MAAA,QADF;IAWD,CAzBA,kCADH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA8BD,CAjCD;;IAAMR,Q;UACoCD,Q;;;KADpCC,Q;AAmCN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}